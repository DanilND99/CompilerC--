program -> declaration declaration_list
declaration_list -> declaration declaration_list | e
declaration -> int ID declaration_type | void ID ( params ) { local_declarations statement_list }
declaration_type -> var_ending | ( params ) { local_declarations statement_list }
var_ending -> ; | [ NUM ] ;
params -> param param_list | void
param_list -> , param param_list | e
param -> int ID param_ending
param_ending -> [ ] | e
local_declarations -> int ID var_ending local_declarations | e
statement_list -> statement statement_list | e
statement -> var = expression ; | call ; | { local_declarations statement_list } | if ( expression ) statement else_part | while ( expression ) statement |
			 return return_ending | input var ; | output expression ;
else_part -> else statement | e
return_ending -> ; | expression ;
var -> ID array_part
array_part -> [ arithmetic_expression ] | e
expression -> arithmetic_expression expression_ending
expression_ending -> relop arithmetic_expression | e
relop -> <= | < | > | >= | == | !=
arithmetic_expression -> term arithmetic_loop
arithmetic_loop -> addop term arithmetic_loop | e
addop -> + | -
term -> factor term_loop
term_loop -> mulop factor term_loop | e
mulop -> * | /
factor -> ( arithmetic_expression ) | var | call | NUM
call -> ID ( args )
args -> args_list | e
args_list -> arithmetic_expression args_list_loop
args_list_loop -> , arithmetic_expression args_list_loop | e